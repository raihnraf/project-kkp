package Main;

import Custom.ScrollBarCustom;
import java.awt.Color;
import java.awt.GradientPaint;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Locale;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JPanel;
import javax.swing.JScrollBar;
import javax.swing.Timer;

public class Menu_Utama extends javax.swing.JFrame {

    public class GradientPanel extends JPanel {
        @Override
        protected void paintComponent(Graphics grphcs) {
            super.paintComponent(grphcs); // Memastikan panel direset sebelum menggambar
            Graphics2D g2 = (Graphics2D) grphcs;
            g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            // Membuat gradient dari atas ke bawah
            GradientPaint g = new GradientPaint(0, 0, Color.decode("#2980B9"), 0, getHeight(), Color.decode("#FFFFFF"));
            g2.setPaint(g);
            // Menggambar persegi panjang dengan sudut membulat (rounded rectangle)
            g2.fillRoundRect(0, 0, getWidth(), getHeight(), 15, 15);
            // Menggambar persegi panjang tambahan di sisi kanan (strip)
            g2.fillRect(getWidth() - 20, 0, 20, getHeight()); // Strip 20px di sisi kanan
            // Menggambar persegi panjang tambahan di sisi kiri (strip)
            g2.fillRect(0, 0, 20, getHeight()); // Strip 20px di sisi kiri
            // Panggil paintChildren untuk memastikan komponen anak digambar di atas background
            super.paintChildren(grphcs);
        }
    }
    
    private Timer timer;

    public Menu_Utama() {
        initComponents();
        //Untuk membuka mode full screen
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        
        //ScrollBar
        scroll_menu.setVerticalScrollBar(new ScrollBarCustom());
        ScrollBarCustom sbc = new ScrollBarCustom();
        sbc.setOrientation(JScrollBar.HORIZONTAL);
        scroll_menu.setHorizontalScrollBar(sbc);
        
        execute();
        
        // Timer dengan delay 1000 ms (1 detik) untuk memperbarui label dengan tanggal dan waktu saat ini
        timer = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                showDayDateTime();
            }
        });
        // Memulai timer
        timer.start();
    }
    
    //Menampilkan DayDateTime
    private void showDayDateTime() {
        Calendar calendar = Calendar.getInstance();
        Date now = new Date();
        SimpleDateFormat formatHari = new SimpleDateFormat("EEE", new Locale("in", "ID"));
        SimpleDateFormat dateFormat = new SimpleDateFormat("dd-MM-yyyy HH:mm:ss");
        String hari = formatHari.format(calendar.getTime());
        String dateTime = dateFormat.format(now);
        lb_tanggal.setText(hari + ", " + dateTime);
    }
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pn_header = new javax.swing.JPanel();
        lb_indojaya = new javax.swing.JLabel();
        lb_tanggal = new javax.swing.JLabel();
        lb_user = new javax.swing.JLabel();
        pn_sidebar = new javax.swing.JPanel();
        scroll_menu = new javax.swing.JScrollPane();
        pn_menu = pn_menu = new GradientPanel();
        pn_content = new javax.swing.JPanel();
        pn_utama = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pn_header.setBackground(new java.awt.Color(200, 0, 0));

        lb_indojaya.setFont(new java.awt.Font("Bell MT", 1, 28)); // NOI18N
        lb_indojaya.setText("PT . INDOJAYA MULTI TEKNIK");

        lb_tanggal.setBackground(new java.awt.Color(255, 255, 255));
        lb_tanggal.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lb_tanggal.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_tanggal.setText("Hari, Tanggal dan Waktu");

        lb_user.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lb_user.setText("USER - NAMA LENGKAP");

        javax.swing.GroupLayout pn_headerLayout = new javax.swing.GroupLayout(pn_header);
        pn_header.setLayout(pn_headerLayout);
        pn_headerLayout.setHorizontalGroup(
            pn_headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_headerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lb_user)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 512, Short.MAX_VALUE)
                .addComponent(lb_tanggal)
                .addContainerGap())
            .addGroup(pn_headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pn_headerLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lb_indojaya)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        pn_headerLayout.setVerticalGroup(
            pn_headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_headerLayout.createSequentialGroup()
                .addContainerGap(78, Short.MAX_VALUE)
                .addGroup(pn_headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lb_tanggal)
                    .addComponent(lb_user))
                .addContainerGap())
            .addGroup(pn_headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(pn_headerLayout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(lb_indojaya)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        getContentPane().add(pn_header, java.awt.BorderLayout.PAGE_START);

        pn_sidebar.setBackground(new java.awt.Color(255, 255, 255));
        pn_sidebar.setPreferredSize(new java.awt.Dimension(250, 500));

        scroll_menu.setBackground(new java.awt.Color(255, 255, 255));
        scroll_menu.setBorder(null);

        pn_menu.setBackground(new java.awt.Color(204, 204, 204));
        pn_menu.setForeground(new java.awt.Color(255, 255, 255));
        pn_menu.setLayout(new javax.swing.BoxLayout(pn_menu, javax.swing.BoxLayout.Y_AXIS));
        scroll_menu.setViewportView(pn_menu);

        javax.swing.GroupLayout pn_sidebarLayout = new javax.swing.GroupLayout(pn_sidebar);
        pn_sidebar.setLayout(pn_sidebarLayout);
        pn_sidebarLayout.setHorizontalGroup(
            pn_sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scroll_menu, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
        );
        pn_sidebarLayout.setVerticalGroup(
            pn_sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scroll_menu, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
        );

        getContentPane().add(pn_sidebar, java.awt.BorderLayout.LINE_START);

        pn_content.setBackground(new java.awt.Color(255, 255, 255));

        pn_utama.setBackground(new java.awt.Color(255, 255, 255));
        pn_utama.setPreferredSize(new java.awt.Dimension(600, 500));
        pn_utama.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout pn_contentLayout = new javax.swing.GroupLayout(pn_content);
        pn_content.setLayout(pn_contentLayout);
        pn_contentLayout.setHorizontalGroup(
            pn_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pn_utama, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 602, Short.MAX_VALUE)
        );
        pn_contentLayout.setVerticalGroup(
            pn_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pn_utama, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        getContentPane().add(pn_content, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(866, 608));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        pn_utama.add(new Content_Utama());
        pn_utama.repaint();
        pn_utama.revalidate();
    }//GEN-LAST:event_formWindowOpened
    
    //Menampilkan User
    public void setUser(String name){
        lb_user.setText(name);
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Menu_Utama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Menu_Utama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Menu_Utama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Menu_Utama.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu_Utama().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lb_indojaya;
    private javax.swing.JLabel lb_tanggal;
    private javax.swing.JLabel lb_user;
    private javax.swing.JPanel pn_content;
    private javax.swing.JPanel pn_header;
    private javax.swing.JPanel pn_menu;
    private javax.swing.JPanel pn_sidebar;
    private javax.swing.JPanel pn_utama;
    private javax.swing.JScrollPane scroll_menu;
    // End of variables declaration//GEN-END:variables

    
    private void execute() {
    ImageIcon iconHome          = new ImageIcon(getClass().getResource("/Images/Icon/iconOffice_30px.png")); 
    ImageIcon iconMaster        = new ImageIcon(getClass().getResource("/Images/Icon/iconMaster_30px.png"));
    ImageIcon iconBarang        = new ImageIcon(getClass().getResource("/Images/Icon/iconDataBarang_30px.png"));
    ImageIcon iconPegawai      = new ImageIcon(getClass().getResource("/Images/Icon/iconDataPegawai_30px.png"));
    ImageIcon iconAkun          = new ImageIcon(getClass().getResource("/Images/Icon/iconDataUser_30px.png"));
    ImageIcon iconTransaksi1    = new ImageIcon(getClass().getResource("/Images/Icon/iconTransaksi1_30px.png"));
    ImageIcon iconTransaksi2    = new ImageIcon(getClass().getResource("/Images/Icon/iconTransaksi2_30px.png"));
    ImageIcon iconLaporan1      = new ImageIcon(getClass().getResource("/Images/Icon/iconLaporan1_30px.png"));
    ImageIcon iconLaporan2      = new ImageIcon(getClass().getResource("/Images/Icon/iconLaporan2_30px.png"));
    
//  =====SUBMENU MASTER=====
    Menu_Item dataAkun     = new Menu_Item(null, true, iconAkun, "Data Akun", new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            pn_utama.removeAll();
            pn_utama.add(new Data_Akun());
            pn_utama.repaint();
            pn_utama.revalidate();
        }
    });
    Menu_Item dataPegawai     = new Menu_Item(null, true, iconPegawai, "Data Pegawai", new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            pn_utama.removeAll();
            pn_utama.add(new Data_Pegawai());
            pn_utama.repaint();
            pn_utama.revalidate();
        }
    });
    Menu_Item dataBarang    = new Menu_Item(null, true, iconBarang, "Data Barang", new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            pn_utama.removeAll();
            pn_utama.add(new Data_Barang());
            pn_utama.repaint();
            pn_utama.revalidate();
        }
    });
    Menu_Item dataPelanggan     = new Menu_Item(null, true, iconBarang, "Data Pelanggan", new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            pn_utama.removeAll();
            pn_utama.add(new Data_Pelanggan());
            pn_utama.repaint();
            pn_utama.revalidate();
        }
    });

    
//  =====SUBMENU TRANSAKSI=====
    Menu_Item transaksiBarang = new Menu_Item(null, true, iconTransaksi2, "Transaksi Barang", new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            pn_utama.removeAll();
            pn_utama.add(new Transaksi_Barang());
            pn_utama.repaint();
            pn_utama.revalidate();
        }
    });

    Menu_Item transaksiSewa = new Menu_Item(null, true, iconTransaksi2, "Transaksi Sewa", new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            pn_utama.removeAll();
            pn_utama.add(new Transaksi_Sewa());
            pn_utama.repaint();
            pn_utama.revalidate();
        }
    });
    
//  =====SUBMENU LAPORAN=====
    Menu_Item laporanPelanggan = new Menu_Item(null, true, iconLaporan2, "Laporan Pelanggan", new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            pn_utama.removeAll();
            pn_utama.add(new Laporan_Pelanggan());
            pn_utama.repaint();
            pn_utama.revalidate();
            pn_utama.revalidate();
        }
    });

    Menu_Item laporanBarang = new Menu_Item(null, true, iconLaporan2, "Laporan Barang", new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            pn_utama.removeAll();
            pn_utama.add(new Laporan_Barang());
            pn_utama.repaint();
            pn_utama.revalidate();
            pn_utama.revalidate();
        }
    });
    
    Menu_Item laporanSewa = new Menu_Item(null, true, iconLaporan2, "Laporan Sewa", new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            pn_utama.removeAll();
            pn_utama.add(new Laporan_Sewa());
            pn_utama.repaint();
            pn_utama.revalidate();
            pn_utama.revalidate();
        }
    });

    Menu_Item laporanStokSewa = new Menu_Item(null, true, iconLaporan2, "Laporan Stok Sewa", new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            pn_utama.removeAll();
            pn_utama.add(new Laporan_StokSewa());
            pn_utama.repaint();
            pn_utama.revalidate();
            pn_utama.revalidate();
        }
    });
    

    
//  =====MENU HOME, MASTER, TRANSAKSI, LAPORAN=====
    Menu_Item menuHome          = new Menu_Item(iconHome, false, null, "Home", new ActionListener() {
        @Override
        public void actionPerformed(ActionEvent e) {
            pn_utama.removeAll();
            pn_utama.add(new Content_Utama());
            pn_utama.repaint();
            pn_utama.revalidate();
        }
    });
    Menu_Item menuMaster        = new Menu_Item(iconMaster, false, null , "Master", null, dataBarang,dataPelanggan,dataPegawai,dataAkun);
    Menu_Item menuTransaksi     = new Menu_Item(iconTransaksi1, false, null, "Transaksi", null, transaksiBarang,transaksiSewa);
    Menu_Item menuLaporan       = new Menu_Item(iconLaporan1, false, null, "Laporan", null, laporanPelanggan, laporanBarang, laporanSewa, laporanStokSewa);
    
    addMenu(menuHome, menuMaster,menuTransaksi,menuLaporan);
    
    }

    private void addMenu(Menu_Item... menu) {
        for (int i = 0; i < menu.length; i++){
            pn_menu.add(menu[i]);
            ArrayList<Menu_Item> subMenu = menu[i].getSubMenu();
            for (Menu_Item m : subMenu){
                addMenu(m);
            }
        }
        pn_menu.revalidate();
    }
    
    
}
